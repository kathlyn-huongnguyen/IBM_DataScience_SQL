
-- create schema and import tables;
CREATE SCHEMA IF NOT EXISTS sql_chicago;
USE sql_chicago;
-- imports table from local files
-- update leaders_icon

UPDATE SCHOOLS 
SET LEADERS_ICON = CASE
    WHEN LEADERS_SCORE = 'NDA' THEN 'NONE'
    WHEN LEADERS_SCORE > 0 AND LEADERS_SCORE <20 THEN 'VERY WEAK'
	WHEN LEADERS_SCORE < 40  THEN 'WEAK'
	WHEN LEADERS_SCORE < 60 THEN 'AVERAGE'
	WHEN LEADERS_SCORE < 80 THEN 'STRONG'
	WHEN LEADERS_SCORE < 100 THEN 'VERY STRONG'
    END
WHERE SCHOOL_ID = SCHOOL_ID;

-- procedure (school id and leaders score as input) to update leaders_icon when the leaders_score is updated
-- rollback when input for leaders_score is outside the allowed range (0-99)
DELIMITER //
CREATE PROCEDURE UPDATE_LEADERS_SCORE (IN IN_SCHOOL_IN INT, IN IN_LEADERS_SCORE INT)
BEGIN
	START TRANSACTION;
    UPDATE SCHOOLS 
    SET LEADERS_SCORE = IN_LEADERS_SCORE
    WHERE SCHOOL_ID = IN_SCHOOL_ID;
    IF IN_LEADERS_SCORE > 0 AND IN_LEADERS_SCORE <20 THEN UPDATE SCHOOLS SET LEADERS_ICON = 'VERY WEAK';
	ELSEIF IN_LEADERS_SCORE < 40 THEN UPDATE SCHOOLS SET LEADERS_ICON = 'WEAK'  WHERE SCHOOL_ID = IN_SCHOOL_ID;
	ELSEIF IN_LEADERS_SCORE < 60 THEN UPDATE SCHOOLS SET LEADERS_ICON = 'AVERAGE'  WHERE SCHOOL_ID = IN_SCHOOL_ID;
	ELSEIF IN_LEADERS_SCORE < 80 THEN UPDATE SCHOOLS SET LEADERS_ICON = 'STRONG'  WHERE SCHOOL_ID = IN_SCHOOL_ID;
	ELSEIF IN_LEADERS_SCORE < 100 THEN UPDATE SCHOOLS SET LEADERS_ICON = 'VERY STRONG'  WHERE SCHOOL_ID = IN_SCHOOL_ID;
	ELSEIF IN_LEADERS_SCORE >= 100 THEN ROLLBACK WORK;
    COMMIT;
    END IF;
END // 

DELIMITER ; 

-- ANALYSIS
-- SHOW COLUMNS FROM sql_practice.schools;
-- SHOW COLUMNS FROM sql_practice.crime;
-- SHOW COLUMNS FROM sql_practice.crime;

-- CHICAGO CENSUS DATA
SELECT COUNT(COMMUNITY_AREA_NUMBER) FROM CENSUS; -- 77 
-- hardship index ranking 
SELECT COMMUNITY_AREA_NAME, HARDSHIP_INDEX FROM CENSUS ORDER BY HARDSHIP_INDEX DESC; -- RIVERDALE #1 
-- number of community ares with hardship index > 50 
SELECT COUNT(*) AS 'NUMBER OF COMMUNITY AREAS WITH HARDSHIP INDEX >50' FROM CENSUS WHERE HARDSHIP_INDEX > 50.0;
-- community areas with per-capita incomes > $60,000
SELECT COMMUNITY_AREA_NUMBER,COMMUNITY_AREA_NAME,PER_CAPITA_INCOME,HARDSHIP_INDEX FROM CENSUS ORDER BY PER_CAPITA_INCOME DESC;
-- community areas with per capita income less than 11000
SELECT COMMUNITY_AREA_NAME, PER_CAPITA_INCOME FROM CENSUS WHERE PER_CAPITA_INCOME < 11000;
-- 5 community areas with highest % of household below property line 
SELECT COMMUNITY_AREA_NAME, PERCENT_HOUSEHOLDS_BELOW_POVERTY FROM CENSUS ORDER BY PERCENT_HOUSEHOLDS_BELOW_POVERTY DESC LIMIT 5;
-- 'Riverdale','56.5'
-- 'Fuller Park','51.2'
-- 'Englewood','46.6'
-- 'North Lawndale','43.1'
-- 'East Garfield Park','42.4'
-- name of the community area with highest hardship_index 
SELECT COMMUNITY_AREA_NAME, HARDSHIP_INDEX FROM CENSUS WHERE HARDSHIP_INDEX=(SELECT MAX(HARDSHIP_INDEX) FROM CENSUS); -- 98

--
--
-- CHICAGO PUBLIC SCHOOLS
SELECT COUNT(SCHOOL_ID) AS 'ROWS' FROM SCHOOLS; -- 566
-- number of elementary schools
SELECT COUNT(*) FROM SCHOOLS WHERE `Elementary, Middle, or High School` = 'ES'; -- 462
-- average safety score for all types of schools
SELECT `Elementary, Middle, or High School`, AVG(SAFETY_SCORE) FROM SCHOOLS GROUP BY `Elementary, Middle, or High School`;
-- schools with highest safety score 
SELECT NAME_OF_SCHOOL,SAFETY_SCORE FROM SCHOOLS WHERE SAFETY_SCORE= (SELECT MAX(SAFETY_SCORE) FROM SCHOOLS);
SELECT COUNT(*) FROM SCHOOLS WHERE SAFETY_SCORE= (SELECT MAX(SAFETY_SCORE) FROM SCHOOLS); -- 19
-- top 10 schools with the highest 'Average Student Attendance'
SELECT NAME_OF_SCHOOL, AVERAGE_STUDENT_ATTENDANCE FROM SCHOOLS ORDER BY AVERAGE_STUDENT_ATTENDANCE DESC LIMIT 10;
-- 5 schools with the lowest Avergage Student Attendance sorted in ascending order based attendance 
SELECT NAME_OF_SCHOOL, AVERAGE_STUDENT_ATTENDANCE FROM SCHOOLS WHERE AVERAGE_STUDENT_ATTENDANCE ORDER BY AVERAGE_STUDENT_ATTENDANCE LIMIT 5;
-- schools with average attendance lower than 70% 
SELECT NAME_OF_SCHOOL, AVERAGE_STUDENT_ATTENDANCE FROM SCHOOLS 
WHERE AVERAGE_STUDENT_ATTENDANCE is not null and AVERAGE_STUDENT_ATTENDANCE != '' AND AVERAGE_STUDENT_ATTENDANCE < 70 ;
-- total College Enrollment for each Community Area
SELECT COMMUNITY_AREA_NAME, SUM(COLLEGE_ENROLLMENT) AS TOTAL_ENROLLMENT FROM schools 
GROUP BY COMMUNITY_AREA_NAME ORDER BY SUM(COLLEGE_ENROLLMENT) DESC;
--  5 Community Areas with the least total College Enrollment sorted in ascending order
SELECT COMMUNITY_AREA_NAME, SUM(COLLEGE_ENROLLMENT) AS TOTAL_ENROLLMENT FROM SCHOOLS 
GROUP BY COMMUNITY_AREA_NAME ORDER BY TOTAL_ENROLLMENT LIMIT 5;
--  5 schools with lowest safety score
SELECT SAFETY_SCORE FROM SCHOOLS ORDER BY SAFETY_SCORE ;
SELECT SCHOOL_ID, SAFETY_SCORE FROM SCHOOLS WHERE SAFETY_SCORE IS NOT NULL AND SAFETY_SCORE !='' ORDER BY SAFETY_SCORE LIMIT 5;
-- hardship index for the community area which has College Enrollment of 4368
SELECT HARDSHIP_INDEX from CENSUS CS, SCHOOLS S where CS.community_area_number = S.community_area_number and college_enrollment = 4368;
-- hardship index for the community area which has the school with the highest enrollment
SELECT community_area_number from schools order by college_enrollment desc limit 1; -- 5
SELECT community_area_number, community_area_name, hardship_index from CENSUS WHERE community_area_number = 5 ;
-- insights (relationship/correlation) about the comunities and crimes in the Chicago area
-- school names, community names and average attendance for communities with a hardship index of 98.
SELECT CS.HARDSHIP_INDEX, S.NAME_OF_SCHOOL, S.COMMUNITY_AREA_NAME, S.AVERAGE_STUDENT_ATTENDANCE FROM CENSUS CS LEFT JOIN SCHOOLS S 
ON CS.COMMUNITY_AREA_NUMBER = CS.COMMUNITY_AREA_NUMBER WHERE CS.HARDSHIP_INDEX=98;
--
--
-- CHICAGO CRIME DATA 
SELECT COUNT(*) FROM CRIME; -- 533
-- all case numbers for crime involving minors 
SELECT CASE_NUMBER, DESCRIPTION FROM CRIME WHERE DESCRIPTION LIKE '%MINOR%'; -- 'HL266884','SELL/GIVE/DEL LIQUOR TO MINOR','HK238408','ILLEGAL CONSUMPTION BY MINOR'
-- all kidnapping crimes involving a child? (children are not considered minors for the purposes of crime analysis)
SELECT CASE_NUMBER PRIMARY_TYPE, DESCRIPTION FROM CRIME WHERE PRIMARY_TYPE LIKE '%KIDNAP%' AND DESCRIPTION LIKE '%CHILD%'; -- HN144152 CHILD ABDUCTION/STRANGER
-- which community area is most crime prone?
SELECT COMMUNITY_AREA_NUMBER, COUNT(CASE_NUMBER) AS NUMBER_OF_CASES FROM CRIME GROUP BY COMMUNITY_AREA_NUMBER ORDER BY NUMBER_OF_CASES DESC LIMIT 1;
SELECT COMMUNITY_AREA_NUMBER, COMMUNITY_AREA_NAME FROM CENSUS WHERE COMMUNITY_AREA_NUMBER = 25; -- Austin
-- community area name with the most number of crimes
SELECT COMMUNITY_AREA_NUMBER, COMMUNITY_AREA_NAME FROM CENSUS WHERE COMMUNITY_AREA_NUMBER=
(SELECT COMMUNITY_AREA_NUMBER FROM CRIME GROUP BY COMMUNITY_AREA_NUMBER ORDER BY COUNT(COMMUNITY_AREA_NUMBER) DESC LIMIT 1); -- 25 austin
-- crimes took place at a school 
SELECT CS.COMMUNITY_AREA_NAME, CR.CASE_NUMBER, CR.PRIMARY_TYPE, CR.LOCATION_DESCRIPTION 
FROM CENSUS CS LEFT JOIN CRIME CR ON CS.COMMUNITY_AREA_NUMBER = CR.COMMUNITY_AREA_NUMBER WHERE CR.LOCATION_DESCRIPTION LIKE '%SCHOOL%';

--
--
-- view that enables users to select just the school name and the icon fields from the CHICAGO_PUBLIC_SCHOOLS table.
-- SELECT * FROM SCHOOLS_INFO;
-- SELECT SCHOOL_NAME, LEADERS_RATING FROM SCHOOLS_INFO;



